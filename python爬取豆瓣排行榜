from bs4 import BeautifulSoup  # 网页解析，获取数据
import re  # 正则表达式，进行文字匹配
import urllib.request, urllib.error  # 指定URL，获取网页数据
import xlwt  # 进行excel操作
import sqlite3  # 进行sqlite数据库操作
from lxml import etree

# 影片详情超链接的规则
findlink = re.compile(r'<a href="(.*?)">')  # 创建正则表达式对象，表示规则（字符串的模式）

# 获取影片的图片
findimg = re.compile(r'<img.*src="(.*?)"', re.S)  # re.S 匹配除换行符以外所有的字符

# 获取电影的名字
findname = re.compile(r'<span class="title">(.*)</span>')

# 获取电影的评分

finding = re.compile(r'<span class="rating_num" property="v:average">(\d.\d)</span>')

# 获取影片的评价人数

findpj = re.compile(r'<span>(\d*)人评价</span>')

# 获取影片的内容

findnr = re.compile(r'<p class="">(.*?)</p>', re.S)

# 获取电影概述

findinq = re.compile(r'<span class="inq">(.*)</span>')


def main():
    baseurl = "https://movie.douban.com/top250?start="
    # 1.爬取网页
    datalist = getData(baseurl)
    # savepath = "豆瓣电影Top250.xls"
    dbpath = 'movie.db'
    # 3.保存数据
    # saveData(datalist, savepath)
    savedata2DB(datalist, dbpath)


# 得到指定一个URL网页的内容

def askURl(url):
    head = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36 Edg/100.0.1185.39"
    }
    request = urllib.request.Request(url, headers=head)
    html = ""
    try:
        response = urllib.request.urlopen(request)
        html = response.read().decode("utf-8")
        # print(html)
    except urllib.error.URLError as error:
        if hasattr(error, "code"):  # e.code 是错误代码
            print(error.code)
        if hasattr(error, "reason"):
            print(error.reason)  # e.resoon获取的是错误的原因
    return html


# askURl("https://movie.douban.com/top250?start=")


# 爬取网页
def getData(baseurl):
    datelist = []
    for i in range(0, 10):  # 调用获取网页的信息的函数10次
        url = baseurl + str(i * 25)
        html = askURl(url)  # 保存获取到的网页源码
        # 2.逐一解析数据
        # xpath_ = etree.HTML(html)
        # data = xpath_.xpath('//div[@class="item"]')
        # print(data)
        soup = BeautifulSoup(html, "html.parser")
        for item in soup.find_all('div', class_="item"):  # 查找符合要求的字符串，形成列表
            # print(item)
            data = []  # 保存一部电影的所有信息
            item = str(item)

            # 获取影片详情的超链接
            link = re.findall(findlink, item)[0]  # re库通过正则表达式来查找指定的字符串
            data.append(link)  # append 追加  添加连接
            # print(link)

            # 获取影片图片的超链接
            img = re.findall(findimg, item)[0]
            data.append(img)  # 添加图片
            # print(img)

            # 获取影片名字
            name = re.findall(findname, item)  # 片名不止一个，可能有中文名或者外国名
            if len(name) == 2:
                chinaname = name[0]
                data.append(chinaname)  # 添加中文名
                othername = name[1].replace("/", "")  # replace 替换字符，把网页外文名前面的/替换成空

                data.append(othername.strip())  # 添加外文名
            else:
                data.append(name[0])
                data.append(" ")  # 外国名留空
            # print(name)

            # 获取影片概述
            inq = re.findall(findinq, item)
            if len(inq) != 0:
                inq = inq[0].replace("。", "")  # 去掉句号
                data.append(inq)
            else:
                data.append(" ")  # 留空

            # 获取影片的评分
            ing = re.findall(finding, item)[0]
            data.append(ing)
            # print(ing)

            # 获取影片的评价人数
            pj = re.findall(findpj, item)[0]
            data.append(pj)
            # print(pj)

            # 获取电影的内容
            nr = re.findall(findnr, item)[0]
            nr = re.sub('<br(\s+)?/>(\s+)?', " ", nr)  # 去掉br\0
            nr = re.sub('/', " ", nr)  # 替换/
            nr = re.sub(r"\s+", "", nr)
            data.append(nr.strip())  # strip()去掉空格

            datelist.append(data)  # 把处理好的电影信息放进datalist
    print(datelist)
    return datelist

    # 保存数据


# 保存Excel
def saveData(datalist, savepath):
    print('save....')
    book = xlwt.Workbook(encoding='utf-8', style_compression=0)
    sheet = book.add_sheet('豆瓣电影Top250', cell_overwrite_ok=True)
    col = ('电影链接详情', '图片链接', '电影名字', '其他名字', '概述', '评分', '评价人数', '内容')
    for i in range(0, len(col)):
        sheet.write(0, i, col[i])  # 列名
    for i in range(0, 250):
        print('正在保存第%d条' % (i + 1))
        data = datalist[i]
        for j in range(0, len(col)):
            sheet.write(i + 1, j, data[j])  # 数据       # 横的是行，竖的是列

    book.save('豆瓣电影Top250.xls')  # 保存


# 保存数据库
def savedata2DB(datalist, dbpath):
    init_db(dbpath)
    conn = sqlite3.connect(dbpath)
    cur = conn.cursor()

    for data in datalist:
        for index in range(len(data)):
            if index == 5 or index == 6:
                continue
            data[index] = '"' + data[index] + '"'
        try:
            sql = '''
                    insert into movie250 (
                    info_link,pic_link,cname,ename,instroduction,score,rated,info)
                    values (%s)''' % ",".join(data)

            print(sql)
            cur.execute(sql)
            conn.commit()
        except Exception as e:
            print(e)
    cur.close()
    conn.close()


def init_db(dbpath):
    sql = '''
        create table movie250
        (
        id integer primary key autoincrement,
        info_link text ,
        pic_link text ,
        cname varchar ,
        ename varchar ,
        instroduction text ,
        score numeric ,
        rated numeric ,
        info text 
        )  
    '''
    conn = sqlite3.connect(dbpath)
    cursor = conn.cursor()
    cursor.execute(sql)
    conn.commit()
    conn.close()


if __name__ == '__main__':  # 当程序执行时
    main()  # 调用函数
    #  init_db("movietest.db")

print('全部保存完毕')
